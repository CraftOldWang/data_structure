# 用跨行字符串才能运行检查层序的函数
input_str = """4 13 21 26 42 55 61 76 89 93 117 118 134 135 140 144 157 167 186 192 198 203 209 210 211 212 226 237 251 258 272 283 291 292 304 309 311 352 363 364 393 396 397 407 409 452 489 490 498 502 510 517 535 560 574 576 577 588 594 597 602 612 624 646 656 659 671 681 689 693 714 719 729 736 739 740 743 745 748 767 779 791 802 818 825 845 853 874 878 880 893 908 920 937 945 951 964 966 968 969 978 996 1003 1004 1007 1009 1013 1020 1021 1023 1039 1058 1059 1062 1098 1122 1128 1129 1133 1142 1150 1177 1178 1180 1182 1190 1198 1209 1214 1233 1237 1254 1264 1282 1300 1305 1317 1340 1356 1376 1387 1399 1403 1419 1432 1445 1447 1475 1494 1505 1515 1523 1528 1529 1539 1550 1565 1582 1587 1588 1599 1606 1613 1615 1620 1623 1632 1633 1645 1646 1647 1649 1673 1710 1712 1736 1737 1741 1765 1771 1772 1781 1789 1819 1822 1829 1835 1844 1851 1855 1872 1874 1876 1877 1891 1893 1895 1896 1898 1904 1911 1927 1928 1929 1930 1931 1934 1939 1954 1970 1972 1979 1982 1991 1996 1999 2015 2018 2023 2027 2029 2044 2050 2052 2059 2061 2062 2066 2067 2070 2084 2088 2090 2094 2097 2102 2106 2110 2124 2134 2138 2141 2144 2147 2155 2157 2159 2167 2197 2203 2204 2206 2220 2226 2233 2240 2244 2247 2258 2266 2272 2293 2308 2317 2322 2323 2331 2367 2372 2391 2394 2396 2406 2410 2412 2420 2424 2456 2463 2475 2476 2481 2491 2501 2507 2514 2531 2533 2534 2538 2539 2543 2557 2561 2573 2603 2630 2645 2649 2652 2655 2660 2665 2669 2691 2694 2699 2705 2711 2712 2714 2742 2744 2764 2768 2775 2779 2788 2801 2818 2829 2843 2852 2855 2863 2871 2879 2884 2886 2894 2898 2920 2928 2934 2937 2951 2965 2971 2980 2982 2984 2990 2998 3002 3011 3028 3034 3040 3043 3046 3063 3068 3073 3075 3113 3123 3125 3127 3131 3141 3160 3179 3180 3184 3185 3203 3212 3217 3219 3220 3225 3229 3236 3246 3252 3254 3266 3269 3275 3276 3283 3294 3296 3297 3306 3307 3318 3319 3332 3338 3353 3362 3369 3378 3381 3387 3391 3399 3414 3415 3423 3431 3434 3435 3439 3441 3442 3444 3446 3450 3470 3474 3477 3480 3489 3497 3500 3507 3517 3518 3523 3524 3529 3535 3566 3575 3590 3592 3604 3608 3629 3643 3645 3663 3665 3673 3678 3681 3684 3685 3689 3690 3693 3696 3710 3711 3721 3723 3728 3733 3734 3736 3738 3739 3748 3749 3753 3761 3766 3768 3775 3787 3788 3791 3795 3799 3818 3822 3827 3830 3832 3842 3845 3851 3852 3870 3887 3907 3910 3912 3925 3929 3961 3965 3972 3974 3979 3986 3987 3992 4002 4009 4010 4015 4016 4024 4025 4027 4037 4074 4084 4087 4089 4090 4096 4101 4107 4137 4143 4144 4147 4174 4175 4188 4191 4197 4198 4208 4227 4228 4230 4232 4236 4245 4248 4250 4259 4262 4285 4318 4334 4335 4338 4339 4359 4363 4365 4373 4389 4392 4413 4415 4419 4420 4429 4434 4443 4446 4462 4472 4473 4474 4481 4491 4493 4495 4496 4499 4501 4519 4522 4534 4535 4543 4567 4575 4579 4586 4588 4595 4599 4604 4607 4611 4613 4620 4625 4629 4631 4632 4635 4647 4655 4659 4664 4677 4679 4682 4690 4695 4701 4704 4710 4712 4714 4715 4726 4733 4737 4744 4751 4753 4762 4763 4766 4767 4769 4784 4785 4789 4790 4795 4797 4802 4812 4816 4818 4820 4825 4830 4833 4840 4843 4849 4852 4855 4858 4861 4863 4865 4870 4873 4874 4875 4882 4893 4909 4911 4917 4930 4935 4941 4951 4952 4953 4956 4968 4971 4984 4988
"""


# 检查 层序 是否可能对 (每一行的最后一个比下一行的大应该是必要条件)
def check_line_numbers(s):
    # 按换行分割字符串
    lines = s.splitlines()

    # 遍历每一行，比较当前行的最后一个数字和下一行的第一个数字
    for i in range(len(lines) - 1):  # 只比较到倒数第二行
        # 提取当前行和下一行的数字
        current_line = list(map(int, lines[i].split()))
        next_line = list(map(int, lines[i + 1].split()))

        # 比较当前行的最后一个数字与下一行的第一个数字
        if current_line[-1] <= next_line[0]:
            return False  # 如果当前行的最后一个数字不大于下一行的第一个数字，返回 False

    return True  # 如果所有比较都通过，返回 True


# 检查 中序 是否递增
def is_increasing(s):
    # 将字符串按空格分割成数字字符串
    numbers = list(map(int, s.split()))

    # 遍历列表，判断每个数字是否递增
    for i in range(1, len(numbers)):
        if numbers[i] <= numbers[i - 1]:
            return False  # 如果发现不是递增的，返回 False

    return True  # 如果所有数字都递增，返回 True


# 测试例子
if check_line_numbers(input_str):
    print("level order may be right")
else:
    print("level order wrong")

if is_increasing(input_str):
    print("inorder right")
else:
    print("inorder wrong")
